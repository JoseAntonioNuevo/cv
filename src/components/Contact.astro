---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

// Hardcoded contact info
const email = "joseantonio.nuevo@gmail.com";
const phone = "+34 685033994";

// Hardcoded social links
const linkedin = "https://www.linkedin.com/in/jose-antonio-nuevo";
const github = "https://github.com/JoseAntonioNuevo";

// Get current language and translations
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

---

<section id="contact" class="relative py-12 sm:py-16 lg:py-20 px-4 overflow-hidden">
  <!-- Print-only contact info -->
  <div class="hidden print-only contact-info" style="display: none;">
    <h2 class="text-2xl font-bold mb-4">{t('contact.title')}</h2>
    <div class="mb-2">
      <strong>{t('contact.emailLabel')}:</strong> {email}
    </div>
    <div class="mb-2">
      <strong>{t('contact.phoneLabel')}:</strong> {phone}
    </div>
    <div class="mb-2">
      <strong>LinkedIn:</strong> {linkedin}
    </div>
    <div class="mb-2">
      <strong>GitHub:</strong> {github}
    </div>
  </div>
  <!-- Background decoration -->
  <div class="absolute inset-0 -z-10">
    <div class="absolute top-0 -left-4 w-48 h-48 sm:w-56 sm:h-56 md:w-72 md:h-72 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 dark:opacity-10 animate-blob"></div>
    <div class="absolute top-0 -right-4 w-48 h-48 sm:w-56 sm:h-56 md:w-72 md:h-72 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 dark:opacity-10 animate-blob animation-delay-2000"></div>
    <div class="absolute -bottom-8 left-20 w-48 h-48 sm:w-56 sm:h-56 md:w-72 md:h-72 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 dark:opacity-10 animate-blob animation-delay-4000"></div>
  </div>

  <div class="max-w-5xl mx-auto relative">
    <h2 class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-gray-100 mb-3 sm:mb-4 text-center">
      {t('contact.title')}
    </h2>
    <p class="text-center text-sm sm:text-base text-gray-600 dark:text-gray-400 mb-8 sm:mb-12 max-w-2xl mx-auto px-4">
      {t('contact.subtitle')}
    </p>

    <div class="grid lg:grid-cols-2 gap-6 sm:gap-8 lg:gap-12">
      <!-- Contact Info -->
      <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl dark:shadow-2xl p-6 sm:p-8 border border-gray-100 dark:border-gray-700">
        <div class="mb-6 sm:mb-8">
          <h3 class="text-xl sm:text-2xl font-semibold text-gray-800 dark:text-gray-100 mb-2">
            {t('contact.connectTitle')}
          </h3>
          <p class="text-sm sm:text-base text-gray-600 dark:text-gray-400">
            {t('contact.connectSubtitle')}
          </p>
        </div>

        <div class="space-y-3 sm:space-y-4 md:space-y-6">
          <a
            href={`mailto:${email}`}
            class="group flex items-center p-3 sm:p-4 rounded-xl bg-gray-50 dark:bg-gray-700/50 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-all duration-300 border border-transparent hover:border-blue-200 dark:hover:border-blue-800"
          >
            <div class="p-2 sm:p-2.5 bg-blue-100 dark:bg-blue-900/50 rounded-lg group-hover:bg-blue-200 dark:group-hover:bg-blue-800/50 transition-colors flex-shrink-0">
              <svg class="w-4 h-4 sm:w-5 sm:h-5 text-blue-600 dark:text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </div>
            <div class="ml-2.5 sm:ml-3 overflow-hidden flex-1 min-w-0">
              <p class="text-xs text-gray-500 dark:text-gray-400">{t('contact.emailLabel')}</p>
              <p class="text-xs sm:text-sm text-gray-700 dark:text-gray-200 font-medium group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors truncate">
                {email}
              </p>
            </div>
          </a>

          <a
            href={`tel:${phone}`}
            class="group flex items-center p-3 sm:p-4 rounded-xl bg-gray-50 dark:bg-gray-700/50 hover:bg-green-50 dark:hover:bg-green-900/20 transition-all duration-300 border border-transparent hover:border-green-200 dark:hover:border-green-800"
          >
            <div class="p-2 sm:p-2.5 bg-green-100 dark:bg-green-900/50 rounded-lg group-hover:bg-green-200 dark:group-hover:bg-green-800/50 transition-colors flex-shrink-0">
              <svg class="w-4 h-4 sm:w-5 sm:h-5 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
            </div>
            <div class="ml-2.5 sm:ml-3 flex-1 min-w-0">
              <p class="text-xs text-gray-500 dark:text-gray-400">{t('contact.phoneLabel')}</p>
              <p class="text-xs sm:text-sm text-gray-700 dark:text-gray-200 font-medium group-hover:text-green-600 dark:group-hover:text-green-400 transition-colors">
                {phone}
              </p>
            </div>
          </a>

          <a
            href={linkedin}
            target="_blank"
            rel="noopener noreferrer"
            class="group flex items-center p-3 sm:p-4 rounded-xl bg-gray-50 dark:bg-gray-700/50 hover:bg-blue-50 dark:hover:bg-blue-900/20 transition-all duration-300 border border-transparent hover:border-blue-200 dark:hover:border-blue-800"
          >
            <div class="p-2 sm:p-2.5 bg-blue-100 dark:bg-blue-900/50 rounded-lg group-hover:bg-blue-200 dark:group-hover:bg-blue-800/50 transition-colors flex-shrink-0">
              <div class="w-4 h-4 sm:w-5 sm:h-5 text-blue-600 dark:text-blue-400">
                <svg fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </div>
            </div>
            <div class="ml-2.5 sm:ml-3 flex-1 min-w-0">
              <p class="text-xs text-gray-500 dark:text-gray-400">{t('contact.linkedinLabel')}</p>
              <p class="text-xs sm:text-sm text-gray-700 dark:text-gray-200 font-medium group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                {t('contact.linkedinText')}
              </p>
            </div>
          </a>

          <a
            href={github}
            target="_blank"
            rel="noopener noreferrer"
            class="group flex items-center p-3 sm:p-4 rounded-xl bg-gray-50 dark:bg-gray-700/50 hover:bg-purple-50 dark:hover:bg-purple-900/20 transition-all duration-300 border border-transparent hover:border-purple-200 dark:hover:border-purple-800"
          >
            <div class="p-2 sm:p-2.5 bg-purple-100 dark:bg-purple-900/50 rounded-lg group-hover:bg-purple-200 dark:group-hover:bg-purple-800/50 transition-colors flex-shrink-0">
              <div class="w-4 h-4 sm:w-5 sm:h-5 text-purple-600 dark:text-purple-400">
                <svg fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
              </div>
            </div>
            <div class="ml-2.5 sm:ml-3 flex-1 min-w-0">
              <p class="text-xs text-gray-500 dark:text-gray-400">{t('contact.githubLabel')}</p>
              <p class="text-xs sm:text-sm text-gray-700 dark:text-gray-200 font-medium group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors">
                {t('contact.githubText')}
              </p>
            </div>
          </a>
        </div>
      </div>

      <!-- Contact Form -->
      <div class="bg-white dark:bg-gray-800 rounded-2xl shadow-xl dark:shadow-2xl p-6 sm:p-8 border border-gray-100 dark:border-gray-700 contact-form">
        <h3 class="text-xl sm:text-2xl font-semibold text-gray-800 dark:text-gray-100 mb-4 sm:mb-6">{t('contact.sendMessageTitle')}</h3>
        
        <!-- Success Message -->
        <div id="success-message" class="hidden mb-6 p-4 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="w-5 h-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm font-medium text-green-800 dark:text-green-200" data-text-key="success">
                {t('contact.success')}
              </p>
            </div>
          </div>
        </div>

        <!-- Error Message -->
        <div id="error-message" class="hidden mb-6 p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <svg class="w-5 h-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm font-medium text-red-800 dark:text-red-200" data-text-key="error">
                {t('contact.error')}
              </p>
            </div>
          </div>
        </div>

        <form id="contact-form" class="space-y-4 sm:space-y-5">
          <div>
            <label for="name" class="block text-xs sm:text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5 sm:mb-2">
              {t('contact.name')}
            </label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent text-sm sm:text-base text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 transition-colors"
              placeholder={t('contact.namePlaceholder')}
            />
          </div>

          <div>
            <label for="email" class="block text-xs sm:text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5 sm:mb-2">
              {t('contact.email')}
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent text-sm sm:text-base text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 transition-colors"
              placeholder={t('contact.emailPlaceholder')}
            />
          </div>

          <div>
            <label for="subject" class="block text-xs sm:text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5 sm:mb-2">
              {t('contact.subject')}
            </label>
            <input
              type="text"
              id="subject"
              name="subject"
              required
              class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent text-sm sm:text-base text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 transition-colors"
              placeholder={t('contact.subjectPlaceholder')}
            />
          </div>

          <div>
            <label for="message" class="block text-xs sm:text-sm font-medium text-gray-700 dark:text-gray-300 mb-1.5 sm:mb-2">
              {t('contact.message')}
            </label>
            <textarea
              id="message"
              name="message"
              rows="4"
              required
              class="w-full px-3 sm:px-4 py-2 sm:py-3 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent text-sm sm:text-base text-gray-900 dark:text-gray-100 placeholder-gray-400 dark:placeholder-gray-500 transition-colors resize-none"
              placeholder={t('contact.messagePlaceholder')}
            ></textarea>
          </div>

          <button
            type="submit"
            id="submit-button"
            class="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-medium sm:font-semibold text-sm sm:text-base py-2.5 sm:py-3 px-4 sm:px-6 rounded-lg transform transition-all duration-200 hover:scale-[1.02] focus:scale-[0.98] shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none"
          >
            <span data-text-key="send">{t('contact.send')}</span>
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<style>
  @keyframes blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form') as HTMLFormElement | null;
    const submitButton = document.getElementById('submit-button') as HTMLButtonElement | null;
    const buttonText = submitButton?.querySelector('span');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    const recipientEmail = form?.closest('section')?.querySelector('a[href^="mailto:"]')?.getAttribute('href')?.replace('mailto:', '') || '';

    // Get translations based on current language
    const getTranslations = function() {
      const lang = document.documentElement.lang || 'en';
      const translations: { [key: string]: { send: string; sending: string; success: string; error: string } } = {
        en: {
          send: 'Send Message',
          sending: 'Sending...',
          success: 'Message sent successfully!',
          error: 'Error sending message. Please try again.'
        },
        es: {
          send: 'Enviar Mensaje',
          sending: 'Enviando...',
          success: '¡Mensaje enviado con éxito!',
          error: 'Error al enviar el mensaje. Por favor, inténtalo de nuevo.'
        }
      };
      return translations[lang] || translations.en;
    };

    const t = getTranslations();

    // Hide messages function
    const hideMessages = function() {
      successMessage?.classList.add('hidden');
      errorMessage?.classList.add('hidden');
    };

    // Show success message
    const showSuccess = function() {
      hideMessages();
      successMessage?.classList.remove('hidden');
      successMessage?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    };

    // Show error message
    const showError = function() {
      hideMessages();
      errorMessage?.classList.remove('hidden');
      errorMessage?.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    };

    // Reset button state
    const resetButton = function() {
      if (submitButton) {
        submitButton.disabled = false;
        submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
      }
      if (buttonText) {
        buttonText.textContent = t.send;
      }
    };

    // Set loading state
    const setLoading = function() {
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.classList.add('opacity-50', 'cursor-not-allowed');
      }
      if (buttonText) {
        buttonText.textContent = t.sending;
      }
    };

    form?.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Hide any existing messages
      hideMessages();
      setLoading();

      try {
        // Simulate a small delay to show the loading state
        setTimeout(function() {
          if (!form) return;
          
          const formData = new FormData(form);
          const name = formData.get('name') || '';
          const email = formData.get('email') || '';
          const subject = formData.get('subject') || '';
          const message = formData.get('message') || '';

          const body = 'From: ' + name + '\\nEmail: ' + email + '\\n\\nMessage:\\n' + message;
          const mailtoLink = 'mailto:' + recipientEmail + '?subject=' + encodeURIComponent(subject.toString()) + '&body=' + encodeURIComponent(body);

          // Open mailto link
          window.location.href = mailtoLink;
          
          // Show success message after a brief delay
          setTimeout(function() {
            resetButton();
            showSuccess();
            if (form && 'reset' in form && typeof form.reset === 'function') {
              form.reset();
            }
          }, 1000);
        }, 800);

      } catch (error) {
        console.error('Form submission error:', error);
        resetButton();
        showError();
      }
    });
  });
</script>
