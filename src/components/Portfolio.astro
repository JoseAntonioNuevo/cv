---
import { useTranslations } from '../i18n/utils';
import type { Language } from '../i18n/translations';

export interface Props { 
  lang: string; 
}

const { lang = 'en' } = Astro.props;
const t = useTranslations(lang as Language);

interface Project {
  title: string;
  description: string;
  technologies: string[];
  githubUrl: string;
  liveUrl?: string;
  image: string;
  color: string;
}

function getProjects(t: any): Project[] {
  return [
    {
      title: t('projects.portfolio.registryApi.title'),
      description: t('projects.portfolio.registryApi.description'),
      technologies: t('projects.portfolio.registryApi.technologies'),
      githubUrl: 'https://github.com/JoseAntonioNuevo/Registry-APi-Tech',
      image: 'üîê',
      color: 'from-orange-500 to-red-600'
    },
    {
      title: t('projects.portfolio.boardGame.title'),
      description: t('projects.portfolio.boardGame.description'),
      technologies: t('projects.portfolio.boardGame.technologies'),
      githubUrl: 'https://github.com/JoseAntonioNuevo/Tech-Test-Board-Game',
      liveUrl: 'https://smartpoint-tech-test-joseantonio.netlify.app',
      image: 'üéÆ',
      color: 'from-blue-500 to-purple-600'
    }
  ];
}

const projects = getProjects(t);
---

<section id="projects" class="portfolio-section py-16 px-4">
  <div class="max-w-6xl mx-auto">
    <h2 class="text-3xl md:text-4xl font-bold mb-12 text-gray-900 dark:text-white text-center">
      {t('projects.title')}
    </h2>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      {projects.map((project) => (
        <article class={`project-card group relative overflow-hidden rounded-2xl bg-white dark:bg-gray-800 shadow-xl hover:shadow-2xl transition-all duration-500 transform hover:scale-105`}>
          <!-- Background gradient overlay -->
          <div class={`absolute inset-0 bg-gradient-to-br ${project.color} opacity-5 group-hover:opacity-10 transition-opacity duration-500`}></div>
          
          <!-- Project icon header -->
          <div class={`relative h-48 bg-gradient-to-br ${project.color} flex items-center justify-center overflow-hidden`}>
            <div class="absolute inset-0 bg-black opacity-10"></div>
            
            <!-- Animated background pattern -->
            <div class="absolute inset-0 opacity-20">
              <div class="absolute -top-4 -right-4 w-24 h-24 bg-white rounded-full animate-pulse"></div>
              <div class="absolute -bottom-8 -left-8 w-32 h-32 bg-white rounded-full animate-pulse delay-300"></div>
              <div class="absolute top-1/2 left-1/2 w-20 h-20 bg-white rounded-full animate-pulse delay-700"></div>
            </div>
            
            <!-- Project icon -->
            <span class="relative text-6xl filter drop-shadow-lg animate-float">{project.image}</span>
          </div>
          
          <!-- Project content -->
          <div class="relative p-6">
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-transparent group-hover:bg-clip-text group-hover:bg-gradient-to-r group-hover:from-blue-600 group-hover:to-purple-600 transition-all duration-300">
              {project.title}
            </h3>
            
            <p class="text-gray-600 dark:text-gray-300 mb-6 line-clamp-3">
              {project.description}
            </p>
            
            <!-- Technologies -->
            <div class="mb-6">
              <h4 class="text-sm font-semibold text-gray-700 dark:text-gray-400 mb-2">{t('projects.technologies')}:</h4>
              <div class="flex flex-wrap gap-2">
                {project.technologies.map((tech) => (
                  <span class="px-3 py-1 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full border border-gray-200 dark:border-gray-600 group-hover:border-blue-400 dark:group-hover:border-blue-500 transition-colors">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
            
            <!-- Action buttons -->
            <div class="flex gap-3">
              <a 
                href={project.githubUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="flex-1 inline-flex items-center justify-center gap-2 px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-all duration-300 group/btn"
              >
                <svg class="w-5 h-5 group-hover/btn:rotate-12 transition-transform" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
                <span class="font-semibold">{t('projects.viewCode')}</span>
              </a>
              
              {project.liveUrl && (
                <a 
                  href={project.liveUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex-1 inline-flex items-center justify-center gap-2 px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 group/btn"
                >
                  <svg class="w-5 h-5 group-hover/btn:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                  <span class="font-semibold">{t('projects.viewProject')}</span>
                </a>
              )}
            </div>
          </div>
          
          <!-- Decorative elements -->
          <div class="absolute top-0 right-0 -mt-4 -mr-4 w-24 h-24 bg-gradient-to-br from-blue-400 to-purple-500 rounded-full opacity-10 blur-2xl group-hover:opacity-20 transition-opacity"></div>
          <div class="absolute bottom-0 left-0 -mb-4 -ml-4 w-32 h-32 bg-gradient-to-tr from-purple-400 to-pink-500 rounded-full opacity-10 blur-2xl group-hover:opacity-20 transition-opacity"></div>
        </article>
      ))}
    </div>
    
    <!-- Background decoration -->
    <div class="absolute inset-0 -z-10 overflow-hidden pointer-events-none">
      <div class="absolute top-20 right-0 w-96 h-96 bg-gradient-to-br from-blue-500/10 to-purple-500/10 rounded-full blur-3xl"></div>
      <div class="absolute bottom-20 left-0 w-96 h-96 bg-gradient-to-tr from-purple-500/10 to-pink-500/10 rounded-full blur-3xl"></div>
    </div>
  </div>
</section>

<style>
  .portfolio-section {
    @apply relative;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  
  .delay-300 {
    animation-delay: 300ms;
  }
  
  .delay-700 {
    animation-delay: 700ms;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Hover effect for project cards */
  .project-card {
    transition: transform 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  
  .project-card:hover {
    transform: translateY(-5px) scale(1.02);
  }
</style>